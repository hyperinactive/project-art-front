@import './variables';
@import './config';

@import './routeStyles/navbar';
@import './routeStyles/home';
@import './routeStyles/settings';
@import './routeStyles/profile';
@import './routeStyles/inbox';
@import './routeStyles/projects';
@import './routeStyles/connect';

@import './sharedStyles/imageController';
@import './sharedStyles/elementList';
@import './sharedStyles/postCard';
@import './sharedStyles/projectCard';
@import './sharedStyles/projectWorkspace';

// TODO: structure this dude...
html {
  @include init;
}

body {
  @include init;
  background: fixed no-repeat map-get($mainPallete, 'background') !important;
  color: map-get($mainPallete, 'regularText');

  #root {
    @include full-height;
  }

  // app
  .appContainer {
    @include full-height;
    min-height: 98%;
    height: 98%;
    border-radius: 0.3215rem;

    &__innerContainer {
      @include full-height;
      min-height: 90% !important;
      height: 90% !important;
      background-color: map-get($mainPallete, 'midground');
      border-radius: 0.3215rem;
    }

    .accentText {
      color: map-get($map: $mainPallete, $key: 'accent');
    }
  }

  .headline {
    color: map-get($mainPallete, 'headlineTextLight') !important;
  }

  .greetings {
    color: map-get($mainPallete, 'headlineTextLight') !important;
    padding: 2rem 0 !important;
  }

  // semantic
  .ui {
    .feed {
      margin-top: 0;

      .event {
        background: map-get($map: $mainPallete, $key: 'background') !important;
        border-radius: 0.5rem;
        margin-bottom: 0.5rem !important;
        padding: 0.5rem;
      }
    }
  }
  /* because semantic ui has a rule to change colors of things when focused, got to override it manually */
  .ui.orange.button:focus,
  .ui.orange.buttons .button:focus {
    background-color: #f2711c;
  }

  .themeForm {
    input,
    textarea {
      @include form;
      color: map-get($map: $mainPallete, $key: 'regularText') !important;

      &::placeholder {
        color: opacity(
          map-get($map: $mainPallete, $key: 'regularText')
        ) !important;
        opacity: 1 !important; /* Firefox */
      }
    }
    label {
      color: map-get($map: $mainPallete, $key: 'regularText') !important;
    }
  }
}
